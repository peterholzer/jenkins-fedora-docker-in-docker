version: '2'

services:

  jenkins:
    container_name: jenkins
    build:
        context: .
    ports:
      - '8080:8080'
#     - '8443:8443'
      - '50000:50000'
    environment:
      JENKINS_URL: http://localhost:8080/jenkins/
      JENKINS_HOME: /var/lib/jenkins/
      DOCKER_HOST: tcp://proxy1:2375
    volumes:
      - jenkins_data:/var/lib/jenkins
    restart: unless-stopped
    networks:
      - jenkins-net
    depends_on:
      - docker_socket_proxy

  docker_socket_proxy:
    build:
      context: .
      dockerfile: docker-socket-proxy.Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      jenkins-net:
        aliases:
          - proxy1

  registry:
    container_name: registry
    restart: unless-stopped
    image: registry:2
    ports:
      - 5000:5000
    # environment:
      # REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      # REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      # REGISTRY_AUTH: htpasswd
      # REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      # REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    volumes:
      - registry_data:/var/lib/registry
      # - ./certs:/certs
      # - ./auth:/auth

  nginx:
    container_name: reverse_proxy
    image: nginx
    ports:
      - "80:80"
    networks:
    - jenkins-net
    depends_on:
      - jenkins
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/jenkins.conf:/etc/nginx/conf.d/jenkins.conf:ro


volumes:

  jenkins_data:
    driver: local

  registry_data:
    driver: local

networks:
  jenkins-net:
